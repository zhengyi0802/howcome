# Seles\Shipment Related APIs
extend type Query @guard(with: ["admin-api"]) {
    shipments(input: FilterShipmentInput @builder(method: "Webkul\\GraphQLAPI\\Queries\\Admin\\Sales\\Shipments\\FilterShipment")): [Shipment!] @paginate(type: "PAGINATOR" defaultCount:10 model: "Webkul\\Sales\\Models\\Shipment")

    shipment(id: ID @eq): Shipment @find(model: "Webkul\\Sales\\Models\\Shipment")

    shipmentItems(input: FilterShipmentItemInput! @builder(method: "Webkul\\GraphQLAPI\\Queries\\Admin\\Sales\\Shipments\\FilterShipmentItem")): [ShipmentItem!] @paginate(type: "PAGINATOR" defaultCount:10 model: "Webkul\\Sales\\Models\\ShipmentItem")

    shipmentItem(
        id: ID @eq,
        input: FilterShipmentItemInput! @builder(method: "Webkul\\GraphQLAPI\\Queries\\Admin\\Sales\\Shipments\\FilterShipmentItem")
    ): ShipmentItem @find(model: "Webkul\\Sales\\Models\\ShipmentItem")
}

extend type Mutation @guard(with: ["admin-api"]) {
    createShipment(
        input: CreateShipmentInput!
    ): Shipment  @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Admin\\Sales\\Shipments\\ShipmentMutation@store")
}

input FilterShipmentInput {
    id: Int
    totalQty: Int @rename(attribute: "total_qty")
    orderId: Int @rename(attribute: "order_id")
    orderDate: String @rename(attribute: "order_date")
    shipment_date: String @rename(attribute: "shipment_date")
    inventorySource: String @rename(attribute: "inventory_source")
    shippingTo: String @rename(attribute: "shipping_to")
}

input FilterShipmentItemInput {
    shipmentId: ID! @rename(attribute: "shipment_id")
    id: Int
    name: String
    sku: String
    qty: Int
    weight: Float
    price: Float
    orderItemId: Int @rename(attribute: "order_item_id")
}

input CreateShipmentInput {
    orderId: Int! @rename(attribute: "order_id")
    carrierTitle: String! @rename(attribute: "carrier_title")
    trackNumber: String! @rename(attribute: "track_number")
    inventorySourceId: Int! @rename(attribute: "inventory_source_id")
    shipmentData: [ShipmentDataInput!]! @rename(attribute: "shipment_data")
}

input ShipmentDataInput {
    orderItemId: Int! @rename(attribute: "order_item_id")
    quantity: Int!
}

type Shipment {
    id: Int
    status: String
    totalQty: Int @rename(attribute: "total_qty")
    totalWeight: Float @rename(attribute: "total_weight")
    carrierCode: String @rename(attribute: "carrier_code")
    carrierTitle: String @rename(attribute: "carrier_title")
    trackNumber: String @rename(attribute: "track_number")
    emailSent: Int @rename(attribute: "email_sent")
    customerId: Int @rename(attribute: "customer_id")
    customerType: String @rename(attribute: "customer_type")
    orderId: Int @rename(attribute: "order_id")
    orderAddressId: Int @rename(attribute: "order_address_id")
    createdAt: String @rename(attribute: "created_at")
    updatedAt: String @rename(attribute: "updated_at")
    inventorySourceId: Int @rename(attribute: "inventory_source_id")
    inventorySourceName: String @rename(attribute: "inventory_source_name")
    order: Order! @belongsTo
    items: [ShipmentItem!] @hasMany
    inventorySource: InventorySource! @belongsTo(relation: "inventory_source")
    customer: Customer @belongsTo(relation: "customer")
}

type ShipmentItem {
    id: Int!
    name: String
    description: String
    sku: String
    qty: Int
    weight: Float
    price: Float
    basePrice: Float @rename(attribute: "base_price")
    total: Float
    baseTotal: Float @rename(attribute: "base_total")
    productId: ID! @rename(attribute: "product_id")
    productType: String @rename(attribute: "product_type")
    orderItemId: ID! @rename(attribute: "order_item_id")
    shipmentId: ID! @rename(attribute: "shipment_id")
    additional: String @field(resolver: "Webkul\\GraphQLAPI\\Queries\\Shop\\Common\\FilterCart@additional")
    createdAt: DateTime @rename(attribute: "created_at")
    updatedAt: DateTime @rename(attribute: "updated_at")
    formattedPrice: FormattedShipmentItemPriceData @field(resolver: "Webkul\\GraphQLAPI\\Queries\\Sales\\FormattedPrice@getShipmentItemPriceData")
    shipment: Shipment! @belongsTo(relation: "shipment")
    orderItem: OrderItem! @belongsTo(relation: "order_item")
    product: Product! @belongsTo(relation: "product")
}

type FormattedShipmentItemPriceData {
    price: String @rename(attribute: "price")
    basePrice: String @rename(attribute: "base_price")
    total: String @rename(attribute: "total")
    baseTotal: String @rename(attribute: "base_total")
}
