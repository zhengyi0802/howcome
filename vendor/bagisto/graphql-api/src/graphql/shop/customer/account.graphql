#Shop\Customer\Account Related APIs
extend type Query @guard(with: ["api"]) {
    accountInfo: AccountInfoResult @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\AccountMutation@get")

    newsletterCustomerSubscriber(email: String!): Subscriber @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Admin\\Marketing\\Communications\\NewsletterSubscriberMutation@get")
}

extend type Mutation @guard(with: ["api"]) {
    subscribe(
        input: SubscriberInput!
    ): Subscriber @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Admin\\Marketing\\Communications\\NewsletterSubscriberMutation@subscribe")

    unSubscribeCustomer(
        token: String!
    ): Subscriber @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Admin\\Marketing\\Communications\\NewsletterSubscriberMutation@unsubscribe")

    updateAccount(
        input: UpdateAccountInput!
    ): AccountInfoResult @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\AccountMutation@update")

    deleteAccount(
        input: DeleteAccountInput!
    ): AccountDeleteResponse  @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\AccountMutation@delete")
}

input UpdateAccountInput {
    firstName: String! @rename(attribute: "first_name")
    lastName: String! @rename(attribute: "last_name")
    gender: String!
    email: String! @rules(apply: ["email"])
    dateOfBirth: String @rename(attribute: "date_of_birth")
    phone: String!
    oldpassword: String
    password: String
    passwordConfirmation: String @rename(attribute: "password_confirmation")
    uploadType: UploadType @rename(attribute: "upload_type")
    imageUrl: String @rename(attribute: "image_url")
    image: Upload
}

input DeleteAccountInput {
    password: String!
}

type AccountInfoResult {
    status: Boolean
    message: String
    customer: Customer
}

type AccountDeleteResponse {
    status: Boolean
    success: String
}

enum UploadType {
    FILE @enum(value: "file")
    PATH @enum(value: "path")
    BASE64 @enum(value: "base64")
}
