#Shop\Customer\Wishlist Related APIs
extend type Query @guard(with: ["api"]) {
    wishlists(
        input: FilterWislistInput @builder(method: "Webkul\\GraphQLAPI\\Queries\\Shop\\Customer\\WishlistQuery@getWishlists"),
        first: Int,
        page: Int
    ): [Wishlist!] @paginate(type: "PAGINATOR" defaultCount:10 model:"Webkul\\GraphQLAPI\\Models\\Customer\\Wishlist")

    wishlist(id: ID @eq): Wishlist @find(model: "Webkul\\GraphQLAPI\\Models\\Customer\\Wishlist")
}

extend type Mutation @guard(with: ["api"]) {
    addToWishlist(
        input: AddToWishlistInput!
    ): AddToWishlistResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\WishlistMutation@store")

    removeFromWishlist(
        input: AddToWishlistInput!
    ): RemoveWishlistResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\WishlistMutation@delete")

    moveToCart(id: ID @eq quantity: String!): MoveToCartResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\WishlistMutation@move")

    removeAllWishlists: RemoveWishlistResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\WishlistMutation@deleteAll")

    shareWishlist(shared: Boolean!): ShareWishlistResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\WishlistMutation@share")
}

type Wishlist {
    id: ID!
    channelId: ID! @rename(attribute: "channel_id")
    productId: ID! @rename(attribute: "product_id")
    customerId: ID @rename(attribute: "customer_id")
    itemOptions: [String] @rename(attribute: "item_options")
    additional: String @field(resolver: "Webkul\\GraphQLAPI\\Queries\\Shop\\Common\\FilterCart@additional")
    movedToCart: Boolean @rename(attribute: "moved_to_cart")
    shared: Boolean
    timeOfMoving: Date @rename(attribute: "time_of_moving")
    createdAt: DateTime @rename(attribute: "created_at")
    updatedAt: DateTime @rename(attribute: "updated_at")
    customer: Customer @belongsTo(relation: "customer")
    product: Product! @belongsTo(relation: "product")
    channel: Channel! @belongsTo(relation: "channel")
    cart: Cart @field(resolver: "Webkul\\GraphQLAPI\\Cart@getCart")
}

input FilterWislistInput {
    id: Int
    productId: Int @rename(attribute: "product_id")
    productName: String @rename(attribute: "product_name")
    channelId: Int @rename(attribute: "channel_id")
}

input AddToWishlistInput {
    productId: ID! @rename(attribute: "product_id")
}

type AddToWishlistResponse {
    success: String
    wishlist: [Wishlist]
    cart: Cart @field(resolver: "Webkul\\GraphQLAPI\\Cart@getCart")
}

type RemoveWishlistResponse {
    status: Boolean
    success: String
    wishlist: [Wishlist]
    cart: Cart @field(resolver: "Webkul\\GraphQLAPI\\Cart@getCart")
}

type MoveToCartResponse {
    status: Boolean
    success: String
    wishlist: [Wishlist]
    cart: Cart @field(resolver: "Webkul\\GraphQLAPI\\Cart@getCart")
}

type ShareWishlistResponse {
    isWishlistShared: Boolean
    wishlistSharedLink: String
}
